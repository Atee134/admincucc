// <auto-generated />
using System;
using Ag.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Ag.Domain.Migrations
{
    [DbContext(typeof(AgDbContext))]
    [Migration("20181003161739_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Ag.Domain.Models.IncomeEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("IncomeInDollars");

                    b.Property<string>("SiteName")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.Property<DateTime>("WorkDay");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IncomeEntries");
                });

            modelBuilder.Entity("Ag.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ColleagueId");

                    b.Property<double>("MaxPercent");

                    b.Property<double>("MinPercent");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<int>("Role");

                    b.Property<int>("Shift");

                    b.Property<string>("Sites");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ColleagueId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Ag.Domain.Models.IncomeEntry", b =>
                {
                    b.HasOne("Ag.Domain.Models.User", "User")
                        .WithMany("IncomeEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ag.Domain.Models.User", b =>
                {
                    b.HasOne("Ag.Domain.Models.User", "Colleague")
                        .WithMany()
                        .HasForeignKey("ColleagueId");
                });
#pragma warning restore 612, 618
        }
    }
}
